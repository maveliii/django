# Generated by Django 5.0.6 on 2024-07-03 10:23

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mainApp', '0006_purchaseorder_alerts'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppMainDocument',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('docname', models.CharField(db_column='DocName', max_length=255)),
                ('doc', models.CharField(blank=True, db_column='Doc', max_length=100, null=True)),
                ('doctype', models.CharField(blank=True, db_column='DocType', max_length=255, null=True)),
            ],
            options={
                'db_table': 'app_main_document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppMainPurchaseorder',
            fields=[
                ('pono', models.CharField(db_column='PONO', max_length=255, primary_key=True, serialize=False)),
                ('shipdate', models.DateField(db_column='ShipDate')),
                ('customer', models.CharField(db_column='Customer', max_length=255)),
                ('iasubmissiondate', models.DateField(blank=True, db_column='IaSubmissionDate', null=True)),
                ('inspectiondate', models.DateField(blank=True, db_column='InspectionDate', null=True)),
                ('alerts', models.CharField(blank=True, db_column='Alerts', null=True)),
                ('inspectiondateproposed', models.DateField(blank=True, db_column='InspectionDateProposed', null=True)),
                ('status', models.CharField(db_column='Status')),
            ],
            options={
                'db_table': 'app_main_purchaseorder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppMainVendor',
            fields=[
                ('vendorno', models.CharField(db_column='VendorNo', max_length=255, primary_key=True, serialize=False)),
                ('vendorname', models.CharField(db_column='VendorName', max_length=500)),
                ('territory', models.CharField(blank=True, db_column='Territory', max_length=255, null=True)),
                ('iaalertdays', models.IntegerField(blank=True, db_column='IaAlertDays', null=True)),
                ('email2', models.CharField(blank=True, db_column='Email2', max_length=254, null=True)),
                ('email3', models.CharField(blank=True, db_column='Email3', max_length=254, null=True)),
                ('email4', models.CharField(blank=True, db_column='Email4', max_length=254, null=True)),
                ('email', models.CharField(db_column='Email', max_length=254)),
                ('password', models.CharField(db_column='Password', max_length=255)),
            ],
            options={
                'db_table': 'app_main_vendor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='document',
        ),
        migrations.DeleteModel(
            name='PurchaseOrder',
        ),
        migrations.DeleteModel(
            name='Vendor',
        ),
    ]
